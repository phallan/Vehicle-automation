
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hp
 */
public class listofcustomers extends javax.swing.JInternalFrame {

    /**
     * Creates new form listofcustomers
     */
    public listofcustomers() {
        initComponents();
        
        Connection myconnection;

String path="jdbc:mysql://localhost/";
String place="vehicle_automation";
String username="root";
String password="";

try
{
myconnection=DriverManager.getConnection(path+place, username, password);
try
{
String a="select * from customer_table";
PreparedStatement mystatement=myconnection.prepareStatement(a);
DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
ResultSet myresult=mystatement.executeQuery(); 
if(myresult.next())
{
    do
    {   String UidNumber,custname,phone,Address,gender,dob,BookingID,image;
        UidNumber=myresult.getString("UidNumber");
        custname=myresult.getString("custname");
        phone=myresult.getString("phone");
        Address=myresult.getString("Address");
        gender=myresult.getString("gender");
        dob=myresult.getString("dob");
        BookingID=myresult.getString("BookingID");
        image=myresult.getString("image");
        mymodel.addRow(new Object[]{UidNumber,custname,phone,Address,gender,dob,BookingID,image});
    }
    while(myresult.next());
}
else
{
    JOptionPane.showMessageDialog(rootPane,"No records Available" );
}
        
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
}
finally
{
myconnection.close();
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
}
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UidNumber", "Name", "Phone", "Address", "Gender", "DOB", "BookigID", "image"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(191, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
